{"version":3,"sources":["Logoshort.svg","Questionaire_picture.jpg","Menubar.tsx","Home.tsx","Questionaire.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","useStyles","makeStyles","theme","createStyles","root","flexGrow","title","display","imageIcon","height","iconRoot","textAlign","media","paddingTop","expand","transform","marginLeft","transition","transitions","create","duration","shortest","expandOpen","avatar","backgroundColor","red","list","width","fullList","drawer","breakpoints","up","flexShrink","appBar","menuButton","marginRight","spacing","toolbar","mixins","drawerPaper","content","padding","AsylumAdviceIcon","classes","Icon","alt","className","src","AppIcon","MenuBar","React","useState","mobileOpen","setMobileOpen","handleDrawerToggle","ListItemLink","props","primary","to","renderLink","useMemo","forwardRef","itemProps","ref","ListItem","onClick","button","divider","key","component","ListItemText","Divider","List","map","item","AppBar","position","Toolbar","IconButton","color","aria-label","edge","Box","Hidden","smUp","implementation","Drawer","variant","anchor","open","onClose","paper","ModalProps","keepMounted","xsDown","StyledLink","styled","Link","OverviewCard","Card","CardHeader","CardMedia","image","QuestionaireImage","CardContent","Typography","LawyerMap","Home","Questionaire","App","name","initialEntries","initialIndex","CssBaseline","path","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.864d105d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Logoshort.92c6d77a.svg\";","module.exports = __webpack_public_path__ + \"static/media/Questionaire_picture.19331d5d.jpg\";","import { makeStyles, Theme, createStyles, Divider, List, ListItem, ListItemText, AppBar, Toolbar, IconButton, Hidden, Drawer, Icon, Box } from \"@material-ui/core\";\nimport { red } from \"@material-ui/core/colors\";\nimport AppIcon from './Logoshort.svg';\nimport React from \"react\";\nimport MenuIcon from '@material-ui/icons/Menu';\nimport { Link as RouterLink, LinkProps as RouterLinkProps } from \"react-router-dom\";\nimport { Omit } from '@material-ui/types';\n\nconst drawerWidth = 240\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        root: {\n            flexGrow: 1,\n        },\n        title: {\n            flexGrow: 1,\n            display: 'flex',\n        },\n        imageIcon: {\n            height: '100%'\n        },\n        iconRoot: {\n            textAlign: 'center'\n        },\n        media: {\n            height: 0,\n            paddingTop: '56.25%', // 16:9\n        },\n        expand: {\n            transform: 'rotate(0deg)',\n            marginLeft: 'auto',\n            transition: theme.transitions.create('transform', {\n                duration: theme.transitions.duration.shortest,\n            }),\n        },\n        expandOpen: {\n            transform: 'rotate(180deg)',\n        },\n        avatar: {\n            backgroundColor: red[500],\n        },\n        list: {\n            width: 250,\n        },\n        fullList: {\n            width: 'auto',\n        },\n        drawer: {\n            [theme.breakpoints.up('sm')]: {\n                width: drawerWidth,\n                flexShrink: 0,\n            },\n        },\n        appBar: {\n            [theme.breakpoints.up('sm')]: {\n                width: `calc(100% - ${drawerWidth}px)`,\n                marginLeft: drawerWidth,\n            },\n        },\n        menuButton: {\n            marginRight: theme.spacing(2),\n            [theme.breakpoints.up('sm')]: {\n                display: 'none',\n            },\n        },\n        // necessary for content to be below app bar\n        toolbar: theme.mixins.toolbar,\n        drawerPaper: {\n            width: drawerWidth,\n        },\n        content: {\n            flexGrow: 1,\n            padding: theme.spacing(3),\n        },\n    }),\n);\n\nfunction AsylumAdviceIcon() {\n    const classes = useStyles()\n    return <>\n        <Icon classes={{ root: classes.iconRoot }}>\n            <img alt=\"AsylumAdvice\" className={classes.imageIcon} src={AppIcon} />\n        </Icon>\n    </>\n}\n\n// https://material-ui.com/guides/composition/#list\ninterface ListItemLinkProps {\n    primary: string\n    to: string\n}\n\n// https://material-ui.com/components/drawers/#responsive-drawer\nexport function MenuBar() {\n    const classes = useStyles();\n\n    const [mobileOpen, setMobileOpen] = React.useState(false);\n\n    const handleDrawerToggle = () => {\n        setMobileOpen(!mobileOpen)\n    }\n\n    function ListItemLink(props: ListItemLinkProps) {\n        const { primary, to } = props\n\n        const renderLink = React.useMemo(\n            () =>\n                React.forwardRef<any, Omit<RouterLinkProps, 'to'>>((itemProps, ref) => (\n                    <RouterLink to={to} ref={ref} {...itemProps} />\n                )),\n            [to],\n        );\n\n        return (\n            <li>\n                <ListItem onClick={handleDrawerToggle} button divider key={primary} component={renderLink}>\n                    <ListItemText primary={primary} />\n                </ListItem>\n            </li>\n        )\n    }\n\n    const pages = [['Home', 'home'], ['Concept', 'questionaire'], ['Team', 'home'], ['Support', 'home'], ['Blog', 'home'], ['Languages', 'home']];\n\n    const drawer = (\n        <div>\n            <div className={classes.toolbar} />\n            <Divider />\n            <List>\n                {pages.map((item) => (\n                    <ListItemLink primary={item[0]} to={`/${item[1]}`} />\n                ))}\n            </List>\n        </div>\n    )\n\n    return <>\n        <AppBar position=\"sticky\" className={classes.appBar}>\n            <Toolbar>\n                <IconButton\n                    color=\"inherit\"\n                    aria-label=\"open drawer\"\n                    edge=\"start\"\n                    onClick={handleDrawerToggle}\n                    className={classes.menuButton}\n                >\n                    <MenuIcon />\n                </IconButton>\n                {/* Aligns the app icon on the right */}\n                <Box flexGrow={1}></Box>\n                <Box>\n                    <AsylumAdviceIcon />\n                </Box>\n            </Toolbar>\n        </AppBar>\n        <nav className={classes.drawer} aria-label=\"mailbox folders\">\n            {/* The implementation can be swapped with js to avoid SEO duplication of links. */}\n            <Hidden smUp implementation=\"css\">\n                <Drawer\n                    variant=\"temporary\"\n                    anchor='left'\n                    open={mobileOpen}\n                    onClose={handleDrawerToggle}\n                    classes={{\n                        paper: classes.drawerPaper,\n                    }}\n                    ModalProps={{\n                        keepMounted: true, // Better open performance on mobile.\n                    }}\n                >\n                    {drawer}\n                </Drawer>\n            </Hidden>\n            <Hidden xsDown implementation=\"css\">\n                <Drawer\n                    classes={{\n                        paper: classes.drawerPaper,\n                    }}\n                    variant=\"permanent\"\n                    open\n                >\n                    {drawer}\n                </Drawer>\n            </Hidden>\n        </nav>\n    </>\n}","import { makeStyles, createStyles, Typography } from \"@material-ui/core\";\nimport React from \"react\";\nimport { Card, CardHeader, CardMedia, CardContent } from '@material-ui/core';\n\nimport QuestionaireImage from './Questionaire_picture.jpg';\n\nimport styled from 'styled-components';\n\nimport { Link } from \"react-router-dom\";\n\nconst useStyles = makeStyles(() =>\n    createStyles({\n        root: {\n            flexGrow: 1,\n        },\n        media: {\n            height: 0,\n            paddingTop: '56.25%', // 16:9\n        },\n    }),\n);\n\n// needed in order to remove the underline from links\nconst StyledLink = styled(Link)`\n    text-decoration: none;\n\n    &:focus, &:hover, &:visited, &:link, &:active {\n        text-decoration: none;\n    }\n`;\n\nfunction OverviewCard() {\n    const classes = useStyles()\n    return <>\n        <Card className={classes.root}>\n            <CardHeader title=\"Welcome to Asylum Advice\" />\n            <CardMedia\n                className={classes.media}\n                image={QuestionaireImage}\n                component={props => <StyledLink {...props} to={'/questionaire'} />}\n            />\n            <CardContent>\n                <Typography variant=\"body1\" color=\"textPrimary\" component=\"p\">\n                    Find the information that is relevant to your asylum procedure\n          </Typography>\n            </CardContent>\n        </Card>\n    </>\n}\n\nfunction LawyerMap() {\n    return <>\n    </>\n}\n\nexport function Home() {\n    return <>\n        <OverviewCard />\n        <LawyerMap />\n    </>\n}","import React from \"react\";\n\nexport function Questionaire() {\n    return <>\n        Coming soon\n    </>\n}","import React from 'react';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport { CssBaseline } from '@material-ui/core';\n\nimport MetaTags from 'react-meta-tags';\n\nimport { Switch, Route, MemoryRouter } from \"react-router-dom\";\n\nimport { MenuBar } from './Menubar';\nimport { Home } from './Home';\nimport { Questionaire } from './Questionaire';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      flexGrow: 1,\n    },\n    content: {\n      flexGrow: 1,\n      padding: theme.spacing(1),\n    },\n    toolbar: theme.mixins.toolbar,\n  }),\n);\n\nexport default function App() {\n  const classes = useStyles();\n  return <>\n    {/* https://material-ui.com/getting-started/usage/#responsive-meta-tag */}\n    <MetaTags>\n      <meta name=\"viewport\" content=\"minimum-scale=1, initial-scale=1, width=device-width\" />\n    </MetaTags>\n    <MemoryRouter initialEntries={['/home']} initialIndex={0}>\n      <div className={classes.root}>\n        <CssBaseline />\n        <MenuBar />\n        <main className={classes.content}>\n          <Switch>\n            <Route path=\"/home\">\n              <Home />\n            </Route>\n            <Route path=\"/questionaire\">\n              <Questionaire />\n            </Route>\n          </Switch>\n        </main>\n      </div>\n    </MemoryRouter>\n  </>\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}